fn mergeSort(arr) {
    if (arr.length < 2) 
        return arr;

    let mid = math.trunc(math.floor(arr.length / 2));
    let left = mergeSort(arr.slice(0, mid));
    let right = mergeSort(arr.slice(mid, arr.length));

    return merge(left, right);
}

fn merge(left, right) {
    let result = [];
    let i = 0;
    let j = 0;

    while (i < left.length && j < right.length) {
        if (left[i] < right[j]) {
            result.push(left[i++]);
        } else {
            result.push(right[j++]);
        }
    }
    while (i < left.length) 
        result.push(left[i++]);
    while (j < right.length) 
        result.push(right[j++]);

    return result;
}

fn main()
{
    return mergeSort([38, 27, 43, 3, 9, 82, 10]);
}